generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  discordId   String   @unique
  displayName String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  roles           UserRole?
  gameSubmissions GameSubmission[]
}

model UserRole {
  userId  Int     @unique
  isAdmin Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model Event {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique
  startTime DateTime
  endTime   DateTime
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  gameSubmissions GameSubmission[]
}

model GameSubmission {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  availabilities GameSubmissionAvailability[]

  @@unique([userId, eventId])
}

model GameSubmissionAvailability {
  id           Int      @id @default(autoincrement())
  submissionId Int
  from         DateTime
  to           DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  submission GameSubmission @relation(fields: [submissionId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}
